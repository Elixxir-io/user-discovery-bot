# From: https://about.gitlab.com/2017/09/21/how-to-create-ci-cd-pipeline-with-autodeploy-to-kubernetes-using-gitlab-and-helm/

cache:
  untracked: true
  key: "$CI_BUILD_REF_NAME"
  paths:
    - vendor/

variables:
  REPO_DIR: gitlab.com/privategrity
  REPO_NAME: user-discovery-bot
  DOCKER_IMAGE: carback1/golang-glide:1.9-4a49ace8cac8
  MIN_CODE_COVERAGE: "80.0"

before_script:
  ##
  ## Go Setup
  ##
  - go version || echo "Go executable not found."
  - echo $CI_BUILD_REF
  - echo $CI_PROJECT_DIR
  - mkdir -p $GOPATH/src/$REPO_DIR
  - ln -s $CI_PROJECT_DIR $GOPATH/src/$REPO_DIR/$REPO_NAME
  - cd $GOPATH/src/$REPO_DIR/$REPO_NAME
  - echo $PWD

stages:
  - setup
  - test
  - build
  - trigger_integration

setup:
  stage: setup
  image: $DOCKER_IMAGE
  script:
    # https://docs.gitlab.com/ee/ci/ssh_keys/README.html

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    ##
    ## Add SSH key for gitlab.com
    ##
    - ssh-keyscan -t rsa gitlab.com > ~/.ssh/known_hosts

    - glide cc
    - glide up
  artifacts:
    paths:
     - vendor/

test:
  stage: test
  image: $DOCKER_IMAGE
  coverage: '/^total:\s+\(statements\)\s+\d+\.\d+\%$/'
  script:
    - mkdir -p testdata

    # Test coverage
    - goverage -coverprofile=testdata/coverage.out -v ./... 2>&1 | grep -v "no packages being tested depend on"
    # Exclude some specific packages and files
    - grep -v cmd testdata/coverage.out > testdata/coverage-real.out
    - go tool cover -func=testdata/coverage-real.out
    - go tool cover -html=testdata/coverage-real.out -o testdata/coverage.html

    # Benchmarking
    # - go test -bench=BenchmarkPrecomp -cpuprofile=testdata/precomp.cpu -memprofile=testdata/precomp.mem -short main_benchmarks_test.go
    # - go tool pprof -png udb.test testdata/precomp.cpu > testdata/precomp-cpu.png
    # - go tool pprof -png udb.test testdata/precomp.mem > testdata/precomp-mem.png
    # - go test -bench=BenchmarkRealtime -cpuprofile=testdata/realtime.cpu -memprofile=testdata/realtime.mem -short main_benchmarks_test.go
    # - go tool pprof -png udb.test testdata/realtime.cpu > testdata/realtime-cpu.png
    # - go tool pprof -png udb.test testdata/realtime.mem > testdata/realtime-mem.png

    # Test Coverage Check
    - go tool cover -func=testdata/coverage-real.out | grep "total:" | awk '{print $3}' | sed 's/\%//g' > testdata/coverage-percentage.txt
    - export CODE_CHECK=$(echo "$(cat testdata/coverage-percentage.txt) >= $MIN_CODE_COVERAGE" | bc -l)
    - (if [ "$CODE_CHECK" == "1" ]; then echo "Minimum coverage of $MIN_CODE_COVERAGE succeeded"; else echo "Minimum coverage of $MIN_CODE_COVERAGE failed"; exit 1; fi);
  artifacts:
    paths:
      - testdata/

build:
  stage: build
  image: $DOCKER_IMAGE
  script:
    - mkdir -p release
    - go generate cmd/version.go
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags '-w -s' ./...
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags '-w -s' -o release/udb.linux64 main.go
    - GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -ldflags '-w -s' -o release/udb.win64 main.go
    - GOOS=windows GOARCH=386 CGO_ENABLED=0 go build -ldflags '-w -s' -o release/udb.win32 main.go
    - GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -ldflags '-w -s' -o release/udb.darwin64 main.go
    - ./release/udb.linux64 --version
  artifacts:
    paths:
     - release/


# trigger_integration:
#   stage: trigger_integration
#   script:
#     - "curl -X POST -F token=3cd593ad56ec017e30254c9ec6c0ab -F ref=master https://gitlab.com/api/v4/projects/5615854/trigger/pipeline"
#   only:
#     - master
